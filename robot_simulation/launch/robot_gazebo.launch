<?xml version="1.0" encoding="UTF-8"?>
<launch>

<!-- open gazebo gui -->
<arg name="gui" default="true"/>
<!-- robot initial position and orientation -->
<arg name="x_pos" default="-2.9"/>
<arg name="y_pos" default="-2.9"/>
<arg name="z_pos" default="0.0"/>
<arg name="yaw" default="0.0"/>

<!-- config Turtlebot -->
<arg name="base" value="kobuki"/> <!-- create, roomba -->
<arg name="stacks" value="hexagons"/> <!-- circles, hexagons -->
<arg name="3d_sensor" value="kinect"/> <!-- kinect, asus_xtion_pro -->

<arg name= "robot_name" default= "mobile_base"/>

<!-- Set name of the world to be launched, configure as required -->
<arg name="world_name" default="$(find robot_simulation)/worlds/square_with_obstacles.world"/>

<include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="debug" value="false"/>
</include>

<!-- Requires: urdf 'robot_description' in parameter server -->
<!--param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'"/-->
<param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot3_description)/urdf/turtlebot3_waffle_pi.urdf.xacro'"/>
 
<!-- Broadcast TF values for all fixed elements in the URDF description tree such as structural plates, bars -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
<!-- Broadcast TF values for all moving elements in the URDF description tree such as wheels, joints -->
<!--node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /-->

<!-- Determine whether to run a static transform publisher or not -->
<arg name="static_tf" default="true" />
<node if="$(arg static_tf)" pkg="tf2_ros" type="static_transform_publisher" name="odom_wrt_map_tf" args="0 0 0 0 0 0 map odom" />

<!-- Spawn a robot into Gazebo -->
<node name="urdf_robot_model_spawner" pkg="gazebo_ros" type="spawn_model"
  args="-param robot_description
  -urdf
  -x $(arg x_pos)
  -y $(arg y_pos)
  -z $(arg z_pos)
  -Y $(arg yaw)
  -model $(arg robot_name)"
  respawn="false" output="screen"/>

</launch>
